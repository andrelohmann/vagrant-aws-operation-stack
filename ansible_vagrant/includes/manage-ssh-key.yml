---
# For the operation stack an ssh keypair needs to be created, that can be used on all developer machines
# The following tasks will create and upload the keypair to an s3 Bucket
# Each further developer vagrant machine will then download the keypair from the bucket

- name: copy ssh_config /home/vagrant/.ssh/config
  copy:
    src: ssh_config
    dest: /home/vagrant/.ssh/config
    owner: vagrant
    group: vagrant
    mode: 0644

- name: list keys
  aws_s3:
    bucket: "{{ exchange_bucket }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    mode: list
  register: _exchange_keys

- name: create key and upload if not existent
  block:

  - name: Create a 2048-bit SSH key for user vagrant in /home/vagrant/.ssh/id_rsa
    user:
      name: vagrant
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa

  - name: upload the keys to s3
    aws_s3:
      bucket: "{{ exchange_bucket }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      object: "{{ item }}"
      src: "/home/vagrant/.ssh/{{ item }}"
      mode: put
    with_items:
    - id_rsa
    - id_rsa.pub

  when: "'id_rsa' not in _exchange_keys.s3_keys or 'id_rsa.pub' not in _exchange_keys.s3_keys"

- name: download/update local keys if existent on s3
  block:

  - name: dowload/update keys
    aws_s3:
      bucket: "{{ exchange_bucket }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      object: "{{ item }}"
      dest: "/home/vagrant/.ssh/{{ item }}"
      mode: get
      overwrite: different
    with_items:
    - id_rsa
    - id_rsa.pub

  - name: set correct private key permissions
    file:
      path: /home/vagrant/.ssh/id_rsa
      owner: vagrant
      group: vagrant
      mode: 0600

  - name: set correct public key permissions
    file:
      path: /home/vagrant/.ssh/id_rsa.pub
      owner: vagrant
      group: vagrant
      mode: 0644

  when: "'id_rsa' in _exchange_keys.s3_keys and 'id_rsa.pub' in _exchange_keys.s3_keys"

...
